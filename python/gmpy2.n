    GMP(GNU Multiple Precision Arithmetic Library)是一个开源的高精度运算库，其中不但有普通的整数、实数、浮点数的高精度运算，还有随机数生成，尤其是提供了非常完备的数论中的运算接口，比如Miller-Rabin素数测试算法、大素数生成、欧几里德算法、求域中元素的逆、Jacobi符号、legendre符号等。gmpy2是Python的一个扩展库，是对GMP的封装，它的前身是gmpy。
    作为第三方语言的调用，gmpy2的效率总比直接在C/C++中直接调用GMP会低一些，但差别是很小的，因为gmpy2就是预先编译好的C语言库而已。
        n=gp.mpz(1257787) 
        gp.is_prime(n)
    gmpy2中不仅集成了大整数mpz，还有高精度浮点数mpfr. mpz整数同普通整数运算得到的还是mpz整数。

    Python本身支持高精度大整数运算，一般的数字比较小的范围足够了，只是并非“快速”，读者只需要分别运行以下两句代码就能感觉到了（当然，和电脑的配置是有关系的）
        gmpy2.mpz(1257787)**123456 
        1257787**123456 
如果想知道gmpy2中有哪些函数，只需输入gmpy2.然后按两下Tab键。

整数开方用 gp.isqrt()
